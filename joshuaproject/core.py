# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['url_path_query', 'url_pgs_cntry', 'url_pg_cntry', 'url_upgs_cntry', 'url_upgotd']

# Cell
import urllib3
from urllib3.util.url import Url
import certifi
import json
from functools import partial
from datetime import date

# Cell
def url_path_query(path:str,cntry:str=None,pgid:str=None,extra=None,month=None,day=None,api_key='w3NOS49TW7fg')->str:
    """Builds and returns a string url to query `path` for `cntry`
    with optional `pgid`,`extra`,`month` and `day`."""
    query = ''
    if cntry is not None: query = query+'ROG3='+cntry
    if pgid  is not None: query = query+'&PeopleID3='+pgid
    if extra is not None: query = query+'&'+extra
    if 'upgotd' in path:
        today = date.today()
        if day is None:   day   = today.strftime("%-d")
        if month is None: month = today.strftime("%-m")
        query = query+'&LRofTheDayMonth='+str(month)
        query = query+'&LRofTheDayDay='  +str(day)
    query = query+'&api_key='+api_key
    return Url(scheme='https', host='joshuaproject.net', path=path, query=query).url

# Cell
url_pgs_cntry  = partial(url_path_query,'/api/v2/people_groups')
url_pgs_cntry.__doc__ = """Get all people groups in a specific country."""

url_pg_cntry   = partial(url_pgs_cntry)
url_pg_cntry.__doc__ = """Get a specific people group in a specific country."""

url_upgs_cntry = partial(url_pgs_cntry,extra='LeastReached=Y')
url_upgs_cntry.__doc__ = """Get all unreached people groups in a specific country."""

url_upgotd     = partial(url_path_query,'/api/v2/upgotd')
url_upgotd.__doc__ = """Get data for the UPG of the day."""